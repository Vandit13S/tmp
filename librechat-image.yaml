# Configuration version (required)
version: 1.1.5
 
# Cache settings: Set to true to enable caching
cache: true
 
# Custom interface configuration
interface:
  endpointsMenu: false
  modelSelect: false
  parameters: false
  sidePanel: true
  presets: false
  prompts: true
  bookmarks: true
  multiConvo: false
  # Privacy policy settings
modelSpecs:
  enforce: true
  list:
    - name: "Image Prompt Helper"
      label: "Image Prompt Helper"
      description: "Это поможет вам создать базовый запрос для вашего изображения."
      showIconInMenu: true
      iconURL: "google"
      preset:
        default: false
        endpoint: "google"
        model: "gemini-1.5-flash-latest"
        chatGptLabel: "Russian Google mini"
        greeting: |
          Привет, какое изображение вы хотите создать?
        promptPrefix: |
          You are an AI image prompt generator. Your task is to generate high quality and detailed image prompts for the user based on their requirements. Always reply in the language the user is starting the conversation in.
    - name: "Image Generation Model"
      label: "Image Generation Model"
      description: "Generate images"
      preset:
          default: false
          endpoint: "gptPlugins"
          model: "gpt-4o-2024-08-06"
          modelLabel: "Image Generation"
          tools: ["dalle"]
          agentOptions:
            model: "gpt-4o-2024-08-06"
          greeting: |
            This assistant will generate images based on your queryvv
          promptPrefix: |
            Taking the users input, generate an image using dalle
  
# Example Registration Object Structure (optional)
registration:
  socialLogins: ['github', 'google', 'discord', 'openid', 'facebook']
  # allowedDomains:
  # - "gmail.com"
 
# speech:
#   tts:
#     openai:
#       url: ''
#       apiKey: '${TTS_API_KEY}'
#       model: ''
#       voices: ['']
 
#  
#   stt:
#     openai:
#       url: ''
#       apiKey: '${STT_API_KEY}'
#       model: ''
 
# rateLimits:
#   fileUploads:
#     ipMax: 100
#     ipWindowInMinutes: 60  # Rate limit window for file uploads per IP
#     userMax: 50
#     userWindowInMinutes: 60  # Rate limit window for file uploads per user
#   conversationsImport:
#     ipMax: 100
#     ipWindowInMinutes: 60  # Rate limit window for conversation imports per IP
#     userMax: 50
#     userWindowInMinutes: 60  # Rate limit window for conversation imports per user
 
# Definition of custom endpoints
endpoints:
  # assistants:
  #   disableBuilder: false # Disable Assistants Builder Interface by setting to `true`
  #   pollIntervalMs: 3000  # Polling interval for checking assistant updates
  #   timeoutMs: 180000  # Timeout for assistant operations
  #   # Should only be one or the other, either `supportedIds` or `excludedIds`
  #   supportedIds: ["asst_supportedAssistantId1", "asst_supportedAssistantId2"]
  #   # excludedIds: ["asst_excludedAssistantId"]
  #   Only show assistants that the user created or that were created externally (e.g. in Assistants playground).
  #   # privateAssistants: false # Does not work with `supportedIds` or `excludedIds`
  #   # (optional) Models that support retrieval, will default to latest known OpenAI models that support the feature
  #   retrievalModels: ["gpt-4-turbo-preview"]
  #   # (optional) Assistant Capabilities available to all users. Omit the ones you wish to exclude. Defaults to list below.
  #   capabilities: ["code_interpreter", "retrieval", "actions", "tools", "image_vision"]
  google:
    apiKey: ${GOOGLE_API_KEY}
    models:
     - gemini-1.5-flash-latest
